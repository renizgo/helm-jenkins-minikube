apiVersion: v1
appVersion: lts
name: jenkins
master:
  component.Name: "jenkins-master"
  image: "jenkins/jenkins"
  imagePullPolicy: "Always"
  imageTag: "2.177-alpine"
  Cpu: "300m"
  Memory: "900Mi"
  serviceType: ClusterIP
  serviceAnnotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  installPlugins:
  - durable-task:1.29
  - workflow-durable-task-step:2.30
  - blueocean:1.16.0
  - credentials:2.1.18
  - ec2:1.43
  - git:3.10.0
  - git-client:2.7.7
  - github:1.29.4
  - kubernetes:1.14.3
  - pipeline-utility-steps:2.3.0
  - pipeline-model-definition:1.3.8
  - slack:2.23
  - thinBackup:1.9
  - workflow-aggregator:2.6
  - ssh-slaves:1.29.4
  - ssh-agent:1.17
  - jdk-tool:1.2
  - command-launcher:1.3
  - github-oauth:0.32
  - pegdown-formatter:1.3
  Ingress:
    Annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 50m
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      ingress.kubernetes.io/ssl-redirect: "false"
      ingress.kubernetes.io/proxy-body-size: 50m
      ingress.kubernetes.io/proxy-request-buffering: "off"
  HostName: jenkins.dev.easynvest.io
agent:
  enabled: true
  image: renizgo/jnlp-slave
  imageTag: latest
  CustomJenkinsLabels: []
# ImagePullSecret: jenkins
  imagePullPolicy: Always
  Component: "jenkins-slave"
  Privileged: true
  resources:
    requests:
      cpu: "500m"
      memory: "756Mi"
    limits:
      cpu: "500m"
      memory: "756Mi"
rbac:
  create: true
#  roleBindingKind: RoleBinding
persistence:
  Enabled: true
  Annotations: {}
  AccessMode: ReadWriteOnce
  Size: 20Gi
  volumes:
    - name: backup
      emptyDir: {}
  mounts:
   - mountPath: /backup
     name: backup
